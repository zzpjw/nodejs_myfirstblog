<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
            crossorigin="anonymous"></script>

    <link href="https://fonts.googleapis.com/css2?family=Gowun+Dodum&display=swap" rel="stylesheet">
    <!--  font awesome  -->
    <script src="https://kit.fontawesome.com/182e20a94b.js" crossorigin="anonymous"></script>
    <title>나의 블로그 : 게시글 <%= posting.boardIdx %></title>

    <style>
        * {
            font-family: 'Gowun Dodum', sans-serif;
        }
        .mypic {
            width: 100%;
            height: 200px;

            background-image: linear-gradient(0deg, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('https://images.unsplash.com/photo-1601024445121-e5b82f020549?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1189&q=80');
            background-position: center;
            background-size: cover;

            color: white;

            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }
        .mypic > h1 {
            font-size: 30px;
        }
        .mybox {
            width: 95%;
            max-width: 700px;
            padding: 20px;
            box-shadow: 0px 0px 10px 0px lightblue;
            margin: 20px auto;

            word-break: break-word;
            overflow: auto;
        }
        .mybucket {
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: space-between;
        }

        .mybucket > input {
            width: 70%;
        }

    </style>
    <script>
        let user;
        getSelf(function (u) {
            user = u;
        });

        function getSelf(callback) {
            $.ajax({
                type: "GET",
                url: "/users/me",
                headers: {
                    authorization: `Bearer ${localStorage.getItem("token")}`,
                },
                success: function (response) {
                    callback(response.user);
                },
                error: function (xhr, status, error) {
                    if (status == 401) {
                        alert("로그인이 필요합니다.");
                    } else {
                        localStorage.clear();
                        alert("알 수 없는 문제가 발생했습니다. 관리자에게 문의하세요.");
                    }
                    window.location.href = "/";
                },
            });
        }

        function writeComment() {
            const comment_give = $('#comment').val();
            console.log(comment_give)

            $.ajax({
                type: "POST",
                url: "/blog/comment/<%= posting.boardIdx %>",
                headers: {
                    authorization: `Bearer ${localStorage.getItem("token")}`,
                },
                data: {
                    'comment': comment_give,
                },
                success: function (response) {
                    console.log(response);
                    location.href = location.href
                },
                error: function (error) {
                    alert(error.responseJSON.errorMessage);
                }
            });
        }


        function loginCheck() {
            if (!localStorage.getItem("token")) {
                alert("로그인이 필요한 기능입니다.")
                location.href = "/login"
            }
        }


        // function modifyCommentShow(commentId) {
        //     $(`#comment${commentId}`).hide()
        //     $(`#commentIcon${commentId}`).hide()
        //
        //     $(`#commentDiv${commentId}`).show()
        //
        //     const commentText = $(`#comment${commentId}`).text().trim();
        //     $(`#commentInput${commentId}`).val(commentText)
        // }
        //
        // function modifyCommentHide(commentId) {
        //     $(`#comment${commentId}`).show()
        //     $(`#commentIcon${commentId}`).show()
        //
        //     $(`#commentDiv${commentId}`).hide()
        // }

        // // 댓글을 UI에 그려주는 함수
        // function makeComment(commentObject, tokenUserId) {
        //     const {commentId, nickname, comment, userId} = commentObject;
        //     // 접속한 userId와 댓글 userId가 같을 경우
        //     if (userId == tokenUserId) {
        //         const temp_html = `
        //     <tr id="commentBody${commentId}">
        //         <td scope="col">${nickname}</td>
        //         <td scope="col" id="comment${commentId}">${comment}
        //         </td>
        //         <td id="commentIcon${commentId}">
        //             <i class="fa fa-pencil" aria-hidden="true" onclick="modifyCommentShow(${commentId})"></i>
        //             <i class="fa fa-times" aria-hidden="true" onclick="deleteComment(${commentId})"></i>
        //         </td>
        //
        //         <td colspan="2">
        //         <div id="commentDiv${commentId}" class="input-group mb-3" style="display: none">
        //           <input id="commentInput${commentId}" type="text" class="form-control" aria-label="Recipient's username" aria-describedby="basic-addon2">
        //           <div class="input-group-append">
        //             <button class="btn btn-outline-secondary" type="button" onclick="modifyComment(${commentId})">저장</button>
        //           </div>
        //         </div>
        //         </td>
        //     </tr>`
        //         $('#commentTableBody').append(temp_html)
        //
        //     } else { // 접속한 userId와 댓글 userId가 다를 경우
        //         const temp_html = `<tr>
        //         <td scope="col">${nickname}</td>
        //         <td scope="col">${comment}</td>
        //         <td></td>
        //     </tr>`
        //         $('#commentTableBody').append(temp_html)
        //     }
        // }

        //댓글 삭제 성공
        function deleteComment(commentIdx) {
            if (confirm("댓글을 삭제하시겠습니까?")){
                $.ajax({
                    type: "DELETE",
                    url: `/blog/comment/${commentIdx}`,
                    headers: {
                        authorization: `Bearer ${localStorage.getItem("token")}`,
                    },
                    data: {
                    },
                    success: function (response) {
                        console.log(response);
                        window.location.href = '/blog/<%= posting.boardIdx %>'
                    }
                });
            }
        }

        //댓글 수정
        function modifyComment(commentIdx) {

            const comment_give = $('#comment').val();
            if (!comment_give) {
                alert("댓글 내용이 존재하지 않습니다.")
                return;
            }

            $.ajax({
                type: "PATCH",
                url: `/blog/comment/${commentIdx}`,
                headers: {
                    authorization: `Bearer ${localStorage.getItem('token')}`,
                },
                data: {
                    'comment' : comment_give,
                },
                success: function (response) {
                    console.log(response);
                    location.href = location.href
                },
                error: function (error) {
                    console.error(error.responseJSON.errorMessage);
                },
            });
        }

    </script>
</head>
<body>
<div class="mypic">
    <h1 onclick="window.location.href = '/blog'">나의 블로그</h1>
</div>
<div class="mybox">
    <h2><%= posting.title %></h2>
    <%= posting.username %>
    <%= posting.createDate %>
</div>
<div class="mybox">
    <%= posting.content %>
</div>
<div class="mybox">
    <div class="mybucket">
        <button type="button" class="btn btn-outline-primary" onclick="window.location.href = '/blog/<%= posting.boardIdx %>/rewrite'">수정하기</button>
    </div>
</div>
<div class="mybox">
    <table class="table vertical-align" style="max-width: 100%">
        <tbody>
        <% for (i = 0; i < commentsList.length; i++ ){ %>
            <tr>
                <td class="align-baseline"><%= commentsList[i].username %></td>
                <td class="align-baseline"><%= commentsList[i].comment %></td>
                <td class="icon has-icons-right is-right">
                <%# if (user) ******************************************************************************************************%>
                    <span class="has-icons-right" id="basic-addon2">
                        <i class="fa fa-pencil" aria-hidden="true" onclick="modifyComment(<%= commentsList[i].commentIdx %>)"></i>
                        <i class="fa fa-times" aria-hidden="true" onclick="deleteComment(<%= commentsList[i].commentIdx %>)"></i>
                    </span>
                </td>
            </tr>
        <% } %>
        </tbody>
    </table>
    <div class="input-group mb-3" id="commentWriteBody">
        <span class="input-group-text">댓글</span>
        <input class="form-control" id="comment" onclick="loginCheck()" type="text" aria-label="default input example">
        <button class="btn btn-outline-primary" type="button" id="button-addon2" onclick="writeComment()">작성</button>
    </div>
</div>
</body>
</html>